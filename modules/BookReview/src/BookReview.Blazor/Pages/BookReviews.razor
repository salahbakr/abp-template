@page "/BookReview"
@using BookReview.BookReviews
@using Acme.BookStore.Books
@using Volo.Abp.AspNetCore.Components.Web
@inject IBookReviewAppService BookReviewAppService
@inject IBookAppService BookAppService

<Card>
    <CardHeader>
        <Row Class="justify-content-between">
            <Column ColumnSize="ColumnSize.IsAuto">
                <h2>Book Reviews</h2>
            </Column>
            <Column ColumnSize="ColumnSize.IsAuto">
                <Button Color="Color.Primary" Clicked="OpenCreateBookReviewModal">
                    New Book Review
                </Button>
            </Column>
        </Row>
    </CardHeader>
    <CardBody>
        <DataGrid TItem="BookReviewDto"
                  Data="BookReviewList"
                  TotalItems="TotalCount"
                  ShowPager="true"
                  PageSize="PageSize">
            <DataGridColumns>
                <DataGridColumn TItem="BookReviewDto"
                                Field="@nameof(BookReviewDto.ReviewerName)"
                                Caption="Reviewer Name"></DataGridColumn>
                <DataGridColumn TItem="BookReviewDto"
                                Field="@nameof(BookReviewDto.Text)"
                                Caption="Text"></DataGridColumn>
                <DataGridColumn TItem="BookReviewDto"
                                Field="@nameof(BookReviewDto.Rating)"
                                Caption="Rating"></DataGridColumn>
                <DataGridColumn TItem="BookReviewDto"
                                Field="@nameof(BookReviewDto.BookName)"
                                Caption="Book Name"></DataGridColumn>
            </DataGridColumns>
        </DataGrid>
    </CardBody>
</Card>

<Modal @ref="CreateBookReviewModal">
    <ModalBackdrop />
    <ModalContent IsCentered="true">
        <Form>
            <ModalHeader>
                <ModalTitle>New Book Review</ModalTitle>
                <CloseButton Clicked="CloseCreateBookReviewModal" />
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@CreateValidationsRef" Model="@NewBookReview" ValidateOnLoad="false">
                    <Field>
                        <FieldLabel>Text</FieldLabel>
                        <MemoEdit Rows="5" @bind-Text="@NewBookReview.Text">
                            <Feedback>
                                <ValidationError/>
                            </Feedback>
                        </MemoEdit>
                    </Field>
                    <Field>
                        <FieldLabel>Rating</FieldLabel>
                        <NumericEdit TValue="int" @bind-Value="NewBookReview.Rating" />
                    </Field>
                    <Field>
                        <FieldLabel>Book</FieldLabel>
                        <Select TValue="Guid" @bind-SelectedValue="@NewBookReview.BookId">
                            @foreach (var book in Books)
                            {
                                <SelectItem TValue="Guid" Value="@book.Id">
                                    @book.Name
                                </SelectItem>
                            }
                        </Select>
                    </Field>
                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseCreateBookReviewModal">
                    Cancel
                </Button>
                <Button Color="Color.Primary"
                        Type="@ButtonType.Submit"
                        PreventDefaultOnSubmit="true"
                        Clicked="CreateBookReviewAsync">
                    Save
                </Button>
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>